Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v1.37/dat/en_msgs.txt -cs \
  -h+dist/default/production/KickerKast.X.production.sym \
  --cmf=dist/default/production/KickerKast.X.production.cmf -z -Q18F2550 \
  -o/tmp/xcXrkEBl0 -Mdist/default/production/KickerKast.X.production.map \
  -E1 -ver=XC8 -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo=018h,powerup,init,end_init \
  -pramtop=0800h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcX9iDH7S.obj dist/default/production/KickerKast.X.production.obj 

Object code version is 3.11

Machine type is 18F2550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcX9iDH7S.obj
                end_init                             C6       C6        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/KickerKast.X.production.obj
                intcodelo                            18       18       AE        C       0
                temp                                 41       41        1        1       1
                text15                              442      442       76        C       0
                text14                              69A      69A       22        C       0
                text12                              528      528       6A        C       0
                text11                              650      650       26        C       0
                text10                              6D6      6D6        4        C       0
                text9                               626      626       2A        C       0
                text8                               5FA      5FA       2C        C       0
                text7                               592      592       68        C       0
                text6                                CA       CA      102        C       0
                text5                               676      676       24        C       0
                text4                               342      342       84        C       0
                text3                               4B8      4B8       70        C       0
                text2                               2BA      2BA       88        C       0
                text1                               3C6      3C6       7C        C       0
                text0                               1CC      1CC       EE        C       0
                cstackCOMRAM                          1        1       23        1       1
                bssCOMRAM                            24       24       1D        1       1
                cinit                               6BC      6BC       1A        C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             C6       C6        4         0
                intcodelo                            18       18       AE         0
                reset_vec                             0        0        4         0
                text15                              442      442       76         0
                text14                              69A      69A       22         0
                text12                              528      528       6A         0
                text11                              650      650       26         0
                text10                              6D6      6D6        4         0
                text9                               626      626       2A         0
                text8                               5FA      5FA       2C         0
                text7                               592      592       68         0
                text6                                CA       CA      102         0
                text5                               676      676       24         0
                text4                               342      342       84         0
                text3                               4B8      4B8       70         0
                text2                               2BA      2BA       88         0
                text1                               3C6      3C6       7C         0
                text0                               1CC      1CC       EE         0
                cinit                               6BC      6BC       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 41       41        1         1
                cstackCOMRAM                          1        1       23         1
                bssCOMRAM                            24       24       1D         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000041  000042         1       1  COMRAM  
                intcodelo                      000018  0006C2  0006DA         C       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000042-0007FF              7BE
        CODE             000004-000017               14
                         0006DA-007FFF             7926
        COMRAM           000042-00005F               1E
        CONST            000004-000017               14
                         0006DA-007FFF             7926
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-007FFF             7800
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___awdiv                       cstackCOMRAM 000016
?___awmod                       cstackCOMRAM 000016
D_SEG_Add@ID                    cstackCOMRAM 00001A
D_SEG_Add@i                     cstackCOMRAM 00001B
D_SEG_Add@port                  cstackCOMRAM 000016
D_SEG_Add@portPin               cstackCOMRAM 000018
D_SEG_Add@temp                  cstackCOMRAM 00001C
D_SEG_Update@value              cstackCOMRAM 00001E
D_SEG_Update@which              cstackCOMRAM 00001F
_ADCON1bits                     (abs)        000FC1
_D_SEG_Add                      text12       000528
_D_SEG_Init                     text11       000650
_D_SEG_Start                    text10       0006D6
_D_SEG_Update                   text5        000676
_INTCON2bits                    (abs)        000FF1
_INTCONbits                     (abs)        000FF2
_LowInterruptRoutine            intcodelo    000018
_PORTA                          (abs)        000F80
_PORTAbits                      (abs)        000F80
_PORTB                          (abs)        000F81
_RCONbits                       (abs)        000FD0
_T0CONbits                      (abs)        000FD5
_TRISA                          (abs)        000F92
_TRISAbits                      (abs)        000F92
_TRISB                          (abs)        000F93
_TRISC                          (abs)        000F94
__CFG_BOR$ON                    (abs)        000000
__CFG_BORV$3                    (abs)        000000
__CFG_CCP2MX$OFF                (abs)        000000
__CFG_CP0$OFF                   (abs)        000000
__CFG_CP1$OFF                   (abs)        000000
__CFG_CP2$OFF                   (abs)        000000
__CFG_CP3$OFF                   (abs)        000000
__CFG_CPB$OFF                   (abs)        000000
__CFG_CPD$OFF                   (abs)        000000
__CFG_CPUDIV$OSC1_PLL2          (abs)        000000
__CFG_EBTR0$OFF                 (abs)        000000
__CFG_EBTR1$OFF                 (abs)        000000
__CFG_EBTR2$OFF                 (abs)        000000
__CFG_EBTR3$OFF                 (abs)        000000
__CFG_EBTRB$OFF                 (abs)        000000
__CFG_FCMEN$OFF                 (abs)        000000
__CFG_FOSC$HS                   (abs)        000000
__CFG_IESO$OFF                  (abs)        000000
__CFG_LPT1OSC$OFF               (abs)        000000
__CFG_LVP$OFF                   (abs)        000000
__CFG_MCLRE$ON                  (abs)        000000
__CFG_PBADEN$OFF                (abs)        000000
__CFG_PLLDIV$5                  (abs)        000000
__CFG_PWRT$OFF                  (abs)        000000
__CFG_STVREN$OFF                (abs)        000000
__CFG_USBDIV$1                  (abs)        000000
__CFG_VREGEN$OFF                (abs)        000000
__CFG_WDT$OFF                   (abs)        000000
__CFG_WDTPS$32768               (abs)        000000
__CFG_WRT0$OFF                  (abs)        000000
__CFG_WRT1$OFF                  (abs)        000000
__CFG_WRT2$OFF                  (abs)        000000
__CFG_WRT3$OFF                  (abs)        000000
__CFG_WRTB$OFF                  (abs)        000000
__CFG_WRTC$OFF                  (abs)        000000
__CFG_WRTD$OFF                  (abs)        000000
__CFG_XINST$OFF                 (abs)        000000
__HRAM                          (abs)        000000
__Habs1                         abs1         000000
__Hbank0                        bank0        000000
__Hbank1                        bank1        000000
__Hbank2                        bank2        000000
__Hbank3                        bank3        000000
__Hbank4                        bank4        000000
__Hbank5                        bank5        000000
__Hbank6                        bank6        000000
__Hbank7                        bank7        000000
__Hbigbss                       bigbss       000000
__Hbigdata                      bigdata      000000
__Hbigram                       bigram       000000
__Hbss                          bss          000000
__HbssCOMRAM                    bssCOMRAM    000000
__Hcinit                        cinit        000000
__Hclrtext                      clrtext      000000
__Hcomram                       comram       000000
__Hconfig                       config       30000E
__Hconst                        const        000000
__HcstackCOMRAM                 cstackCOMRAM 000000
__Hdata                         data         000000
__Heeprom_data                  eeprom_data  000000
__Hend_init                     end_init     0000CA
__Hfarbss                       farbss       000000
__Hfardata                      fardata      000000
__Hibigdata                     ibigdata     000000
__Hidata                        idata        000000
__Hidloc                        idloc        200008
__Hifardata                     ifardata     000000
__Hinit                         init         0000C6
__Hintcode                      intcode      000004
__Hintcode_body                 intcode_body 000000
__Hintcodelo                    intcodelo    0000C6
__Hintentry                     intentry     000000
__Hintret                       intret       000000
__Hintsave_regs                 intsave_regs 000000
__Hirdata                       irdata       000000
__Hmediumconst                  mediumconst  000000
__HnvFARRAM                     nvFARRAM     000000
__Hnvbit                        nvbit        000000
__Hnvrram                       nvrram       000000
__Hparam                        rparam       000000
__Hpowerup                      powerup      0000C6
__Hram                          ram          000000
__Hramtop                       ramtop       000800
__Hrbit                         rbit         000000
__Hrbss                         rbss         000000
__Hrdata                        rdata        000000
__Hreset_vec                    reset_vec    000004
__Hrparam                       rparam       000000
__Hsfr                          sfr          000000
__Hsmallconst                   smallconst   000000
__Hspace_0                      (abs)        30000E
__Hspace_1                      (abs)        000042
__Hspace_2                      (abs)        000000
__Hstack                        stack        000000
__Hstruct                       struct       000000
__Htemp                         temp         000042
__Htext                         text         000000
__Htext0                        text0        000000
__Htext1                        text1        000000
__Htext10                       text10       000000
__Htext11                       text11       000000
__Htext12                       text12       000000
__Htext14                       text14       000000
__Htext15                       text15       000000
__Htext2                        text2        000000
__Htext3                        text3        000000
__Htext4                        text4        000000
__Htext5                        text5        000000
__Htext6                        text6        000000
__Htext7                        text7        000000
__Htext8                        text8        000000
__Htext9                        text9        000000
__LRAM                          (abs)        000001
__Labs1                         abs1         000000
__Lbank0                        bank0        000000
__Lbank1                        bank1        000000
__Lbank2                        bank2        000000
__Lbank3                        bank3        000000
__Lbank4                        bank4        000000
__Lbank5                        bank5        000000
__Lbank6                        bank6        000000
__Lbank7                        bank7        000000
__Lbigbss                       bigbss       000000
__Lbigdata                      bigdata      000000
__Lbigram                       bigram       000000
__Lbss                          bss          000000
__LbssCOMRAM                    bssCOMRAM    000000
__Lcinit                        cinit        000000
__Lclrtext                      clrtext      000000
__Lcomram                       comram       000000
__Lconfig                       config       300000
__Lconst                        const        000000
__LcstackCOMRAM                 cstackCOMRAM 000000
__Ldata                         data         000000
__Leeprom_data                  eeprom_data  000000
__Lend_init                     end_init     0000C6
__Lfarbss                       farbss       000000
__Lfardata                      fardata      000000
__Libigdata                     ibigdata     000000
__Lidata                        idata        000000
__Lidloc                        idloc        200000
__Lifardata                     ifardata     000000
__Linit                         init         0000C6
__Lintcode                      intcode      000004
__Lintcode_body                 intcode_body 000000
__Lintcodelo                    intcodelo    000018
__Lintentry                     intentry     000000
__Lintret                       intret       000000
__Lintsave_regs                 intsave_regs 000000
__Lirdata                       irdata       000000
__Lmediumconst                  mediumconst  000000
__LnvFARRAM                     nvFARRAM     000000
__Lnvbit                        nvbit        000000
__Lnvrram                       nvrram       000000
__Lparam                        rparam       000000
__Lpowerup                      powerup      0000C6
__Lram                          ram          000000
__Lramtop                       ramtop       000800
__Lrbit                         rbit         000000
__Lrbss                         rbss         000000
__Lrdata                        rdata        000000
__Lreset_vec                    reset_vec    000000
__Lrparam                       rparam       000000
__Lsfr                          sfr          000000
__Lsmallconst                   smallconst   000000
__Lspace_0                      (abs)        000000
__Lspace_1                      (abs)        000000
__Lspace_2                      (abs)        000000
__Lstack                        stack        000000
__Lstruct                       struct       000000
__Ltemp                         temp         000041
__Ltext                         text         000000
__Ltext0                        text0        000000
__Ltext1                        text1        000000
__Ltext10                       text10       000000
__Ltext11                       text11       000000
__Ltext12                       text12       000000
__Ltext14                       text14       000000
__Ltext15                       text15       000000
__Ltext2                        text2        000000
__Ltext3                        text3        000000
__Ltext4                        text4        000000
__Ltext5                        text5        000000
__Ltext6                        text6        000000
__Ltext7                        text7        000000
__Ltext8                        text8        000000
__Ltext9                        text9        000000
__S0                            (abs)        30000E
__S1                            (abs)        000042
__S2                            (abs)        000000
___awdiv                        text4        000342
___awdiv@counter                cstackCOMRAM 00001A
___awdiv@dividend               cstackCOMRAM 000016
___awdiv@divisor                cstackCOMRAM 000018
___awdiv@quotient               cstackCOMRAM 00001C
___awdiv@sign                   cstackCOMRAM 00001B
___awmod                        text3        0004B8
___awmod@counter                cstackCOMRAM 00001A
___awmod@dividend               cstackCOMRAM 000016
___awmod@divisor                cstackCOMRAM 000018
___awmod@sign                   cstackCOMRAM 00001B
___inthi_sp                     stack        000000
___intlo_sp                     stack        000000
___param_bank                   (abs)        000010
___rparam_used                  (abs)        000001
___sp                           stack        000000
__accesstop                     (abs)        000060
__activetblptr                  (abs)        000002
__end_of_D_SEG_Add              text12       000592
__end_of_D_SEG_Init             text11       000676
__end_of_D_SEG_Start            text10       0006DA
__end_of_D_SEG_Update           text5        00069A
__end_of_LowInterruptRoutine    intcodelo    0000C6
__end_of___awdiv                text4        0003C6
__end_of___awmod                text3        000528
__end_of__initialization        cinit        0006C8
__end_of_checkInputs            text8        000626
__end_of_convertValueToSegment  text6        0001CC
__end_of_delay                  text9        000650
__end_of_determineWinner        text7        0005FA
__end_of_main                   text0        0002BA
__end_of_selectNextSegment      text15       0004B8
__end_of_setSegments            text2        000342
__end_of_updateScore            text1        000442
__end_of_writeSegment           text14       0006BC
__initialization                cinit        0006BC
__mediumconst                   mediumconst  000000
__pbssCOMRAM                    bssCOMRAM    000024
__pcinit                        cinit        0006BC
__pcstackCOMRAM                 cstackCOMRAM 000001
__pintcodelo                    intcodelo    000018
__ptext0                        text0        0001CC
__ptext1                        text1        0003C6
__ptext10                       text10       0006D6
__ptext11                       text11       000650
__ptext12                       text12       000528
__ptext14                       text14       00069A
__ptext15                       text15       000442
__ptext2                        text2        0002BA
__ptext3                        text3        0004B8
__ptext4                        text4        000342
__ptext5                        text5        000676
__ptext6                        text6        0000CA
__ptext7                        text7        000592
__ptext8                        text8        0005FA
__ptext9                        text9        000626
__ramtop                        ramtop       000800
__size_of_D_SEG_Add             (abs)        000000
__size_of_D_SEG_Init            (abs)        000000
__size_of_D_SEG_Start           (abs)        000000
__size_of_D_SEG_Update          (abs)        000000
__size_of_LowInterruptRoutine   (abs)        000000
__size_of___awdiv               (abs)        000000
__size_of___awmod               (abs)        000000
__size_of_checkInputs           (abs)        000000
__size_of_convertValueToSegment (abs)        000000
__size_of_delay                 (abs)        000000
__size_of_determineWinner       (abs)        000000
__size_of_main                  (abs)        000000
__size_of_selectNextSegment     (abs)        000000
__size_of_setSegments           (abs)        000000
__size_of_updateScore           (abs)        000000
__size_of_writeSegment          (abs)        000000
__smallconst                    smallconst   000000
_change                         bssCOMRAM    000024
_checkInputs                    text8        0005FA
_convertValueToSegment          text6        0000CA
_currentSeg                     bssCOMRAM    000025
_delay                          text9        000626
_determineWinner                text7        000592
_main                           text0        0001CC
_score_1                        bssCOMRAM    000026
_score_2                        bssCOMRAM    000027
_segmentCnt                     bssCOMRAM    000028
_segments                       bssCOMRAM    000029
_selectNextSegment              text15       000442
_setSegments                    text2        0002BA
_updateScore                    text1        0003C6
_writeSegment                   text14       00069A
btemp                           temp         000041
convertValueToSegment@data      cstackCOMRAM 000018
convertValueToSegment@segment   cstackCOMRAM 000016
delay@i                         cstackCOMRAM 000019
delay@ms                        cstackCOMRAM 000016
end_of_initialization           cinit        0006C8
int$flags                       temp         000041
intlevel0                       text         000000
intlevel1                       text         000000
intlevel2                       text         000000
intlevel3                       text         000000
selectNextSegment@select        cstackCOMRAM 000003
setSegments@player              cstackCOMRAM 000021
setSegments@value               cstackCOMRAM 000020
stackhi                         (abs)        0007FF
stacklo                         (abs)        000060
start                           init         0000C6
start_initialization            cinit        0006BC
updateScore@how                 cstackCOMRAM 000022
updateScore@which               cstackCOMRAM 000023


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 48 in file "Main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_D_SEG_Add
		_D_SEG_Init
		_D_SEG_Start
		_D_SEG_Update
		_checkInputs
		_determineWinner
		_updateScore
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateScore *****************
 Defined at:
		line 108 in file "Main.c"
 Parameters:    Size  Location     Type
  which           1    wreg     unsigned char 
  how             1   33[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  which           1   34[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_setSegments
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setSegments *****************
 Defined at:
		line 162 in file "Main.c"
 Parameters:    Size  Location     Type
  player          1    wreg     unsigned char 
  value           1   31[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  player          1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_D_SEG_Update
		___awdiv
		___awmod
 This function is called by:
		_updateScore
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   21[COMRAM] int 
  divisor         2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   26[COMRAM] unsigned char 
  counter         1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   21[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setSegments
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "/opt/microchip/xc8/v1.37/sources/common/awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   21[COMRAM] int 
  divisor         2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   27[COMRAM] int 
  sign            1   26[COMRAM] unsigned char 
  counter         1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   21[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setSegments
 This function uses a non-reentrant model


 *************** function _D_SEG_Update *****************
 Defined at:
		line 132 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
  which           1    wreg     unsigned char 
  value           1   29[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  which           1   30[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_convertValueToSegment
 This function is called by:
		_main
		_setSegments
 This function uses a non-reentrant model


 *************** function _convertValueToSegment *****************
 Defined at:
		line 49 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
  segment         2   21[COMRAM] PTR struct .
		 -> segments(24), 
  data            1   23[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_D_SEG_Update
 This function uses a non-reentrant model


 *************** function _determineWinner *****************
 Defined at:
		line 179 in file "Main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _checkInputs *****************
 Defined at:
		line 146 in file "Main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_delay
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 191 in file "Main.c"
 Parameters:    Size  Location     Type
  ms              2   21[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  i               2   24[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_checkInputs
 This function uses a non-reentrant model


 *************** function _D_SEG_Start *****************
 Defined at:
		line 118 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _D_SEG_Init *****************
 Defined at:
		line 77 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _D_SEG_Add *****************
 Defined at:
		line 99 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
  ID              1    wreg     unsigned char 
  port            2   21[COMRAM] PTR volatile unsigned ch
		 -> PORTA(1), 
  portPin         1   23[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ID              1   25[COMRAM] unsigned char 
  temp            6   27[COMRAM] struct .
  i               1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LowInterruptRoutine *****************
 Defined at:
		line 139 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:         18       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_writeSegment
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _writeSegment *****************
 Defined at:
		line 69 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_selectNextSegment
 This function is called by:
		_LowInterruptRoutine
 This function uses a non-reentrant model


 *************** function _selectNextSegment *****************
 Defined at:
		line 33 in file "Drivers/SEG_Driver.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  select          1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writeSegment
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
Drivers/SEG_Driver.c
		_LowInterruptRoutine		CODE           	0018	0000	175
		_convertValueToSegment		CODE           	00CA	0000	259
		_D_SEG_Start   		CODE           	06D6	0000	5
		_D_SEG_Init    		CODE           	0650	0000	39
		_writeSegment  		CODE           	069A	0000	35
		_D_SEG_Update  		CODE           	0676	0000	37
		_selectNextSegment		CODE           	0442	0000	119
		_D_SEG_Add     		CODE           	0528	0000	107

Drivers/SEG_Driver.c estimated size: 776

/opt/microchip/xc8/v1.37/sources/common/awmod.c
		___awmod       		CODE           	04B8	0000	113

/opt/microchip/xc8/v1.37/sources/common/awmod.c estimated size: 113

/opt/microchip/xc8/v1.37/sources/common/awdiv.c
		___awdiv       		CODE           	0342	0000	133

/opt/microchip/xc8/v1.37/sources/common/awdiv.c estimated size: 133

Main.c
		_delay         		CODE           	0626	0000	43
		_updateScore   		CODE           	03C6	0000	125
		_main          		CODE           	01CC	0000	239
		_setSegments   		CODE           	02BA	0000	137
		_checkInputs   		CODE           	05FA	0000	45
		_determineWinner		CODE           	0592	0000	105

Main.c estimated size: 694

shared
		__initialization		CODE           	06BC	0000	13

shared estimated size: 13

